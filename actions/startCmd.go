package actions

import tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"

type Start struct {
	Name   string
	Client tgbotapi.BotAPI
}

func (e Start) fabricateEditedAnswer(message *tgbotapi.Message) tgbotapi.Chattable {
	msg := tgbotapi.NewEditMessageText(message.Chat.ID, message.MessageID, "")
	msg.Text = "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é–∏–µ—Å—è —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ –∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ–ø–æ–≤–µ—â—É —Ç–µ–±—è –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. –°–æ–≥–ª–∞—Å–µ–Ω?"

	instructionCallbackData := "instruction"
	settingsCallbackData := "settings"
	webAppURL := "https://bloodofspring.github.io/spy/webApp/index.html"

	msg.ReplyMarkup = &tgbotapi.InlineKeyboardMarkup{InlineKeyboard: [][]tgbotapi.InlineKeyboardButton{
		{tgbotapi.InlineKeyboardButton{Text: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ", CallbackData: &instructionCallbackData}},
		{tgbotapi.InlineKeyboardButton{Text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", CallbackData: &settingsCallbackData}, tgbotapi.InlineKeyboardButton{Text: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", WebApp: &tgbotapi.WebApp{URL: &webAppURL}}},
	}}

	return msg
}

func (e Start) fabricateSendAnswer(message *tgbotapi.Message) tgbotapi.Chattable {
	msg := tgbotapi.NewAnimation(message.Chat.ID, tgbotapi.FileID("CgACAgIAAxkBAAP2Z6T7_pfO3KIMLK-gSVFkVTRtWHsAAppoAAIIOilJmvsd946QA7k2BA"))
	msg.Caption = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ.\n\n–ï—Å–ª–∏ –≤–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∏–∑–º–µ–Ω–∏—Ç –∏–ª–∏ —É–¥–∞–ª–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –≤—ã –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –æ–± —ç—Ç–æ–º —É–∑–Ω–∞–µ—Ç–µ üîî\n\n–¢–∞–∫–∂–µ –±–æ—Ç —É–º–µ–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/–≥–æ–ª–æ—Å–æ–≤—ã–µ/–∫—Ä—É–∂–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å —Ç–∞–π–º–µ—Ä–æ–º ‚è≥\n\n<b><i>‚ùì–ö–ê–ö –ü–û–î–ö–õ–Æ–ß–ò–¢–¨ –ë–û–¢–ê</i></b>\n–°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –≤–∏–¥–µ–æ –≤—ã—à–µ. –¢–∞–∫–∂–µ –Ω–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ @ChatDetectiveBot:\n\n1. –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram\n\n2. –ü—Ä–æ–ª–∏—Å—Ç–∞–π—Ç–µ –æ—Ç–∫—Ä—ã–≤—à–µ–µ—Å—è –º–µ–Ω—é –≤–Ω–∏–∑ –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Telegram –¥–ª—è –±–∏–∑–Ω–µ—Å–∞'\n\n3.–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª '—á–∞—Ç-–±–æ—Ç—ã'. –í —Å—Ç—Ä–æ–∫–µ –ø–æ–∏—Å–∫–∞ –Ω–∞–±–µ—Ä–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ (@ChatDetectiveBot) –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–¥–æ–±–∞–≤–∏—Ç—å'.\n\n–ì–æ—Ç–æ–≤–æ! –ù–∏–∂–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å, –≤ –∫–∞–∫–∏—Ö —á–∞—Ç–∞—Ö –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ—Ç."
	msg.ParseMode = "HTML"

	exampleOfUsageCallbackData := "exampleOfUsage"
	webAppURL := "https://bloodofspring.github.io/spy/webApp/index.html"

	msg.ReplyMarkup = tgbotapi.InlineKeyboardMarkup{InlineKeyboard: [][]tgbotapi.InlineKeyboardButton{
		{tgbotapi.InlineKeyboardButton{Text: "–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", CallbackData: &exampleOfUsageCallbackData}},
		{tgbotapi.InlineKeyboardButton{Text: "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", WebApp: &tgbotapi.WebApp{URL: &webAppURL}}},
	}}

	return msg
}

func (e Start) Run(update tgbotapi.Update) error {
	var msg *tgbotapi.Message
	var edit bool

	if update.Message != nil {
		msg = update.Message
		edit = false
	} else if update.CallbackQuery != nil {
		msg = update.CallbackQuery.Message
		msg.From = update.CallbackQuery.From
		if update.CallbackQuery.Message.Text == "" {
			edit = false
		} else {
			edit = true
		}
	} else {
		return nil
	}

	var err error

	if edit {
		_, err = e.Client.Send(e.fabricateEditedAnswer(msg))
	} else {
		_, err = e.Client.Send(e.fabricateSendAnswer(msg))
	}

	return err
}

func (e Start) GetName() string {
	return e.Name
}
